@namespace Matrix.Prox3.IntelliZone.Blazor.Components

@if(ActiveLocator != null)
{

    
    @if (ActiveLocator.loc_test_status == 0)
    {
        <div class="locator-block locator-green">
            <div class="name-block">
                <div class="mnid-block">
                    @(((uint)ActiveLocator.decMNID).ToString("X"))
                </div>
                @if (Employee != null)
                {
                    <div class="name-block">
                        @Employee.Surname, @Employee.Initials
                    </div>
                }
            </div>
            <div class="w-1/3 battery-block">
                @if (Math.Round(((uint)ActiveLocator.batteryVoltage/ 127.0) * 100) > 100.0)
                {
                    <svg class="battery-svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />  <line x1="7" y1="10" x2="7" y2="14" />  <line x1="10" y1="10" x2="10" y2="14" />  <line x1="13" y1="10" x2="13" y2="14" />  <line x1="16" y1="10" x2="16" y2="14" /></svg>
                    <p class="text-white text-3xl align-self-center p-2">100%</p>
                }
                else if (Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100) > 95.0)
                {
                    <svg class="battery-svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />  <line x1="7" y1="10" x2="7" y2="14" />  <line x1="10" y1="10" x2="10" y2="14" />  <line x1="13" y1="10" x2="13" y2="14" />  <line x1="16" y1="10" x2="16" y2="14" /></svg>
                    <p class="text-white text-3xl align-self-center p-2">@(Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100))%</p>
                }
                else if (Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100) > 80.0)
                {
                    <svg class="battery-svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />  <line x1="7" y1="10" x2="7" y2="14" />  <line x1="10" y1="10" x2="10" y2="14" />  <line x1="13" y1="10" x2="13" y2="14" /></svg>

                    <p class="text-white text-3xl  align-self-center p-2">@(Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100))%</p>
                }
                else
                {
                    <svg class="battery-svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />  <line x1="7" y1="10" x2="7" y2="14" /></svg>
                    <p class="text-white text-3xl align-self-center p-2">@(Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100))%</p>
                }
            </div>
        </div>
    }
    else
    {
        <div class="locator-block locator-red">
            <div class="name-block">
                <div class="mnid-block">
                    @(((uint)ActiveLocator.decMNID).ToString("X"))
                </div>
                @if (Employee != null)
                {
                    <div class="name-block">
                        @Employee.Surname, @Employee.Initials
                    </div>
                }
            </div>
            <div class="w-1/3 battery-block mx-auto">
                @if (ActiveLocator.batteryVoltage != null)
                {
                    
                
                @if (Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100) > 100.0)
                {
                        <svg class="battery-svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />  <line x1="7" y1="10" x2="7" y2="14" />  <line x1="10" y1="10" x2="10" y2="14" />  <line x1="13" y1="10" x2="13" y2="14" />  <line x1="16" y1="10" x2="16" y2="14" /></svg>
                    <p class="text-white text-3xl align-self-center p-2">100%</p>
                }
                else if (Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100) > 95.0)
                {
                        <svg class="battery-svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />  <line x1="7" y1="10" x2="7" y2="14" />  <line x1="10" y1="10" x2="10" y2="14" />  <line x1="13" y1="10" x2="13" y2="14" />  <line x1="16" y1="10" x2="16" y2="14" /></svg>
                    <p class="text-white text-3xl align-self-center p-2">@(Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100))%</p>
                }
                else if (Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100) > 80.0)
                {
                        <svg class="battery-svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />  <line x1="7" y1="10" x2="7" y2="14" />  <line x1="10" y1="10" x2="10" y2="14" />  <line x1="13" y1="10" x2="13" y2="14" /></svg>

                    <p class="text-white text-3xl  align-self-center p-2">@(Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100))%</p>
                }
                else
                {
                        <svg class="battery-svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />  <line x1="7" y1="10" x2="7" y2="14" /></svg>
                    <p class="text-white text-3xl align-self-center p-2">@(Math.Round(((uint)ActiveLocator.batteryVoltage / 127.0) * 100))%</p>
                    }
                }
                else
                {
                    <svg class="battery-svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">  <path stroke="none" d="M0 0h24v24H0z" />  <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />  <line x1="7" y1="10" x2="7" y2="14" /></svg>
                    <p class="text-white text-3xl align-self-center p-2"></p>
                }
            </div>
        </div>
    }
}




@code {

    [Parameter]
    public ActiveLocator ActiveLocator { get; set; }

    [Parameter]
    public Employee? Employee { get; set; }

}